name: Database CI/CD

on:
  workflow_dispatch:  

env:
  DOCKER_IMAGE: sol-database-tenant
  AZURE_SQL_SERVER: ${{ secrets.AZURE_SQL_SERVER }}.database.windows.net
  AZURE_SQL_DATABASE: ${{ secrets.AZURE_SQL_DATABASE }}
  AZURE_SQL_ADMIN_USER: ${{ secrets.AZURE_SQL_ADMIN_USER }}
  AZURE_SQL_ADMIN_PASSWORD: ${{ secrets.AZURE_SQL_ADMIN_PASSWORD }}

jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare build context
        working-directory: Platform/dbo/SOL.Database.Tenant
        run: |
          # Ensure necessary directories are included in Docker build context
          ln -s ../../../../LinesApp LinesApp
          ln -s ../../../../Platform Platform

      - name: Build Docker image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }}:${{ github.sha }} -f Platform/dbo/Dockerfile Platform/dbo

      - name: Deploy to Azure SQL
        run: |
          docker run --rm \
            -e SQL_SERVER=${{ env.AZURE_SQL_SERVER }} \
            -e SQL_DATABASE=${{ env.AZURE_SQL_DATABASE }} \
            -e SQL_USER=${{ secrets.AZURE_SQL_ADMIN_USER }} \
            -e SQL_PASSWORD=${{ secrets.AZURE_SQL_ADMIN_PASSWORD }} \
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }} \
            /opt/sqlpackage/sqlpackage \
            /Action:Publish \
            /SourceFile:./SOL.Database.Tenant.dacpac \
            /TargetConnectionString:"Server=${SQL_SERVER};Database=${SQL_DATABASE};User Id=${SQL_USER};Password=${SQL_PASSWORD};Encrypt=True;TrustServerCertificate=False"