name: Service Mesh CI/CD

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'  
  PROJECT_PATH: Platform/src/SOL.ServiceMesh/SOL.ServiceMesh.csproj
  DOCKERFILE_PATH: Platform/src/SOL.ServiceMesh/Dockerfile
  PROJECT_PATH_SOL: Platform/src/SOL.ServiceMesh
  BUILD_OUTPUT_PATH: Platform/src/SOL.ServiceMesh/publish
  AZURE_CONTAINER_REGISTRY: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  IMAGE_NAME: service-mesh

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore Dependencies
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Build
        run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release --no-restore

      - name: Publish
        run: dotnet publish ${{ env.PROJECT_PATH }} -c Release -o ${{ env.BUILD_OUTPUT_PATH }}

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: platform-service-artifact
          path: ${{ env.BUILD_OUTPUT_PATH }}

  docker-build-and-push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Azure Container Registry
        run: |
          echo ${{ secrets.REGISTRY_PASSWORD }} | docker login ${{ env.AZURE_CONTAINER_REGISTRY }} -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} -f ${{ env.DOCKERFILE_PATH }} ${{ env.PROJECT_PATH_SOL }}
          docker tag ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Push Docker Image to ACR
        run: |
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build-and-push

    steps:
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Build and deploy Container App
      uses: azure/container-apps-deploy-action@v1
      with:
        acrName: crsharedeastus2cpmprdtsol
        containerAppName: ca-qa-eastus2-cpm-sol-app1
        resourceGroup: rg-qa-eastus2-cpm-prdt-sol
        imageToDeploy: crsharedeastus2cpmprdtsol.azurecr.io/job-python:1.0.7