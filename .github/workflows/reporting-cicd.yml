name: Reporting Service CI/CD

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  ACR_NAME: youracrname  
  IMAGE_NAME: ${{ env.ACR_NAME }}.azurecr.io/reporting-service

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Platform/src/SOL.Reporting
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release

      - name: Publish project
        run: dotnet publish -c Release -o published

      - name: Upload publish artifact
        uses: actions/upload-artifact@v3
        with:
          name: reporting-service-artifact
          path: published

  docker:
    runs-on: ubuntu-latest
    needs: build
    env:
      REGISTRY_USERNAME: ${{ secrets.ACR_USERNAME }}
      REGISTRY_PASSWORD: ${{ secrets.ACR_PASSWORD }}
      ACR_NAME: ${{ env.ACR_NAME }}
      IMAGE_NAME: ${{ env.IMAGE_NAME }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Docker image
        working-directory: Platform/src/SOL.Reporting
        run: |
          docker build -t $IMAGE_NAME:${{ github.sha }} -t $IMAGE_NAME:latest .

      - name: Log in to ACR
        run: echo $REGISTRY_PASSWORD | docker login $ACR_NAME.azurecr.io -u $REGISTRY_USERNAME --password-stdin

      - name: Push Docker image (SHA tag)
        run: docker push $IMAGE_NAME:${{ github.sha }}

      - name: Push Docker image (latest tag)
        run: docker push $IMAGE_NAME:latest